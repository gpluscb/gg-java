plugins {
    id 'java-library'
    id 'signing'
    id 'java'
    id 'maven'
}

group 'com.github.gpluscb'
archivesBaseName = 'gg-java'
version '1.0.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenCentral()

    // Sonatype snapshots
    maven {
        url 'https://oss.sonatype.org/content/repositories/snapshots/'
    }
}

dependencies {
    testImplementation group: 'junit', name: 'junit', version: '4.12'

    // @Nonnull, @Nullable
    api group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.2'

    // OKHttp
    api group: 'com.squareup.okhttp3', name: 'okhttp', version: '4.2.2'

    // Gson for JSON stuff
    api group: 'com.google.code.gson', name: 'gson', version: '2.8.6'
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: sonatypeUsername, password: sonatypePassword)
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: sonatypeUsername, password: sonatypePassword)
            }

            pom.project {
                name 'gg-java'
                packaging 'jar'
                description 'Java wrapper for the smash.gg GraphQL API'
                url 'http://github.com/gpluscb/gg-java'

                scm {
                    connection 'scm:git:git://github.com/gpluscb/gg-java.git'
                    developerConnection 'scm:git:git://github.com/gpluscb/gg-java.git'
                    url 'https://github.com/gpluscb/gg-java'
                }

                licenses {
                    license {
                        name = 'The MIT License'
                        url = 'https://raw.githubusercontent.com/gpluscb/gg-java/master/LICENSE'
                    }
                }

                developers {
                    developer {
                        id 'gpluscb'
                    }
                }
            }
        }
    }
}

signing {
    sign configurations.archives
}

javadoc {
    destinationDir = file('docs/')
    if(JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
    
    exclude('com/github/gpluscb/ggjava/internal')
}

task sourceJar(type: Jar) {
    classifier 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier 'javadoc'
    from javadoc
}

artifacts {
    archives sourceJar
    archives javadocJar
}
